#!/bin/bash

set -e

echo "üöÄ Flight Management System - Docker Build & Run"
echo "=================================================="

# Create necessary directories
echo "üìÅ Creating directories..."
mkdir -p docker/mysql/init
mkdir -p logs

# Build JAR files
echo "üî® Building Reference Manager Service..."
cd reference-manager-service
./mvnw clean package -DskipTests
cd ..

echo "üî® Building Flight Service..."
cd flight-service
./mvnw clean package -DskipTests
cd ..

# Stop existing containers if running
echo "üõë Stopping existing containers..."
docker-compose down

# Remove old images (optional)
echo "üóëÔ∏è Removing old images..."
docker-compose down --rmi local || true

# Build and start all services
echo "üê≥ Building and starting Docker containers..."
docker-compose up --build -d

# Wait for services to be ready
echo "‚è≥ Waiting for services to start..."
sleep 30

# Check service health
echo "üîç Checking service health..."
echo "MySQL: $(docker-compose exec mysql mysqladmin ping -h localhost -u root -p123456 2>/dev/null && echo "‚úÖ UP" || echo "‚ùå DOWN")"
echo "Redis: $(docker-compose exec redis redis-cli ping 2>/dev/null && echo "‚úÖ UP" || echo "‚ùå DOWN")"
echo "Kafka: $(docker-compose exec kafka kafka-broker-api-versions --bootstrap-server localhost:29092 >/dev/null 2>&1 && echo "‚úÖ UP" || echo "‚ùå DOWN")"

# Wait a bit more for Spring Boot apps
echo "‚è≥ Waiting for Spring Boot applications..."
sleep 60

echo "üåê Checking application health..."
echo "Reference Manager: $(curl -s http://localhost:8081/reference-manager/actuator/health | grep -q "UP" && echo "‚úÖ UP" || echo "‚ùå DOWN")"
echo "Flight Service: $(curl -s http://localhost:8082/flight-service/actuator/health | grep -q "UP" && echo "‚úÖ UP" || echo "‚ùå DOWN")"

echo ""
echo "üéâ Flight Management System is ready!"
echo "=================================================="
echo "üìã Service URLs:"
echo "   ‚Ä¢ Reference Manager: http://localhost:8081/reference-manager"
echo "   ‚Ä¢ Flight Service: http://localhost:8082/flight-service"
echo "   ‚Ä¢ Kafka UI: http://localhost:8080"
echo "   ‚Ä¢ MySQL: localhost:3306 (root/123456)"
echo "   ‚Ä¢ Redis: localhost:6379"
echo ""
echo "üìñ API Documentation:"
echo "   ‚Ä¢ Reference Manager Swagger: http://localhost:8081/reference-manager/swagger-ui.html"
echo ""
echo "üîß Useful commands:"
echo "   ‚Ä¢ View logs: docker-compose logs -f [service-name]"
echo "   ‚Ä¢ Stop all: docker-compose down"
echo "   ‚Ä¢ Restart: docker-compose restart [service-name]"
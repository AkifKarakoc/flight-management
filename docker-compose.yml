version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: flight-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: reference_manager_db
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p123456"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - flight-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: flight-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - flight-network

  # Kafka (Zookeeper not needed with KRaft mode)
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: flight-kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,CONTROLLER://0.0.0.0:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - flight-network

  # Reference Manager Service
  reference-manager:
    build:
      context: ./reference-manager-service
      dockerfile: Dockerfile
    container_name: reference-manager-service
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      DB_USERNAME: root
      DB_PASSWORD: 123456
      REDIS_HOST: redis
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      JWT_SECRET: myVeryLongSecretKeyThatIsAtLeast32CharactersLongForHS256Algorithm
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - flight-network
    volumes:
      - ./logs:/app/logs

  # Flight Service
  flight-service:
    build:
      context: ./flight-service
      dockerfile: Dockerfile
    container_name: flight-service
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      DB_USERNAME: root
      DB_PASSWORD: 123456
      REDIS_HOST: redis
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      REFERENCE_MANAGER_URL: http://reference-manager:8081/reference-manager
      JWT_SECRET: myVeryLongSecretKeyThatIsAtLeast32CharactersLongForHS256Algorithm
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      reference-manager:
        condition: service_healthy
    networks:
      - flight-network
    volumes:
      - ./logs:/app/logs

  # Kafka UI (Optional - for development)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - flight-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  kafka_data:
    driver: local

networks:
  flight-network:
    driver: bridge
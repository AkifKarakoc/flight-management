server:
  port: 8082
  servlet:
    context-path: /flight-service

spring:
  application:
    name: flight-service

  profiles:
    active: dev

  datasource:
    url: jdbc:mysql://localhost:3306/flight_service_db?createDatabaseIfNotExist=true
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:123456}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        jdbc:
          batch_size: 50
        order_inserts: true

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      group-id: flight-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.flightmanagement.reference.dto,com.flightmanagement.flight.dto"

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 10
          max-idle: 5

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

app:
  jwt:
    secret: ${JWT_SECRET:flightManagementSecretKey123456789}

  kafka:
    topics:
      flight-events: flight.events
      upload-events: flight.upload.events

  redis:
    ttl:
      airlines: 7200
      stations: 14400
      aircraft: 3600
      flight-lookups: 1800

  file-upload:
    max-size: 10485760
    max-rows: 10000
    allowed-types: text/csv,application/csv

  reference-manager:
    base-url: ${REFERENCE_MANAGER_URL:http://localhost:8081/reference-manager}
    timeout: 5000ms

resilience4j:
  circuitbreaker:
    instances:
      reference-manager:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        sliding-window-size: 10
        minimum-number-of-calls: 5

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.flightmanagement.flight: DEBUG
    org.springframework.security: INFO
    org.springframework.kafka: INFO
    org.springframework.web.socket: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

---
spring:
  config:
    activate:
      on-profile: dev

---
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: create-drop
  liquibase:
    enabled: false

---
spring:
  config:
    activate:
      on-profile: prod
  jpa:
    show-sql: false
  logging:
    level:
      com.flightmanagement.flight: INFO
      root: WARN